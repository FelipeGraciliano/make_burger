"use strict";(self["webpackChunkmake_burger"]=self["webpackChunkmake_burger"]||[]).push([[263],{921:function(e,s,t){t.r(s),t.d(s,{default:function(){return P}});var a=t(641);const n={class:"main-container"},o=(0,a.Lk)("h1",null,"Gerenciar pedidos:",-1);function l(e,s,t,l,i,u){const r=(0,a.g2)("Dashbord");return(0,a.uX)(),(0,a.CE)("div",n,[o,(0,a.bF)(r)])}var i=t(751),u=t(33);const r=e=>((0,a.Qi)("data-v-544c6309"),e=e(),(0,a.jt)(),e),d={id:"burger-table"},c=r((()=>(0,a.Lk)("div",null,[(0,a.Lk)("div",{id:"burger-table-heading"},[(0,a.Lk)("div",{class:"order-id"},"#:"),(0,a.Lk)("div",null,"Cliente:"),(0,a.Lk)("div",null,"Pão:"),(0,a.Lk)("div",null,"Carne:"),(0,a.Lk)("div",null,"Opcionais:"),(0,a.Lk)("div",null,"Acões:")])],-1))),g={id:"burger-table-rows"},h={class:"order-number"},v=["onChange"],k=r((()=>(0,a.Lk)("option",{value:""},"Selecione",-1))),b=["value","selected"],p=["onClick"];function m(e,s,t,n,o,l){const r=(0,a.g2)("Message");return(0,a.uX)(),(0,a.CE)("div",d,[(0,a.bo)((0,a.bF)(r,{message:e.message},null,8,["message"]),[[i.aG,e.message]]),c,(0,a.Lk)("div",g,[((0,a.uX)(!0),(0,a.CE)(a.FK,null,(0,a.pI)(o.burgers,(e=>((0,a.uX)(),(0,a.CE)("div",{class:"burger-table-row",key:e.id},[(0,a.Lk)("div",h,(0,u.v_)(e.id),1),(0,a.Lk)("div",null,(0,u.v_)(e.nome),1),(0,a.Lk)("div",null,(0,u.v_)(e.pao),1),(0,a.Lk)("div",null,(0,u.v_)(e.carne),1),(0,a.Lk)("div",null,[(0,a.Lk)("ul",null,[((0,a.uX)(!0),(0,a.CE)(a.FK,null,(0,a.pI)(e.opcionais,((e,s)=>((0,a.uX)(),(0,a.CE)("li",{key:s},(0,u.v_)(e),1)))),128))])]),(0,a.Lk)("div",null,[(0,a.Lk)("select",{name:"status",class:"status",onChange:s=>l.updateBurger(s,e.id)},[k,((0,a.uX)(!0),(0,a.CE)(a.FK,null,(0,a.pI)(o.status,(s=>((0,a.uX)(),(0,a.CE)("option",{key:s.id,value:s.tipo,selected:e.status==s.tipo},(0,u.v_)(s.tipo),9,b)))),128))],40,v),(0,a.Lk)("button",{class:"delete-btn",onClick:s=>l.deleteBurger(e.id)},"Cancelar",8,p)])])))),128))])])}var L=t(243),C={name:"Dashbord",data(){return{burgers:null,burgers_id:null,status:[],Message:null}},components:{Message:L.A},methods:{async getPedidos(){const e=await fetch("http://localhost:3000/burgers"),s=await e.json();this.burgers=s,console.log(this.burgers),this.getStatus()},async getStatus(){const e=await fetch("http://localhost:3000/status"),s=await e.json();this.status=s,console.log(s)},async deleteBurger(e){const s=await fetch(`http://localhost:3000/burgers/${e}`,{method:"DELETE"});await s.json();this.message="Pedido removido com sucesso",setTimeout((()=>{this.message=null}),3e3),this.getPedidos()},async updateBurger(e,s){const t=e.target.value,a=JSON.stringify({status:t}),n=await fetch(`http://localhost:3000/burgers/${s}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:a}),o=await n.json();this.message=`O Pedido N° ${o.id} foi atualizado para ${o.status} com sucesso!`,setTimeout((()=>{this.message=null}),3e3),console.log(o)}},mounted(){this.getPedidos()}},f=t(262);const w=(0,f.A)(C,[["render",m],["__scopeId","data-v-544c6309"]]);var E=w,_={name:"Pedidos",components:{Dashbord:E}};const y=(0,f.A)(_,[["render",l]]);var P=y}}]);
//# sourceMappingURL=pedidos.aa2fd9d4.js.map